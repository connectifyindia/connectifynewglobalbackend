"""
Django settings for CONNECTIFY_INDIA_PROJECT project.

Generated by 'django-admin startproject' using Django 4.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values,see
https://docs.djangoproject.com/en/4.1/ref/settings/

"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-as2=bh0cokcu%5zmf==l8!eua=3$rl9oz-y5ap@&61xzo07w^c'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = False

ALLOWED_HOSTS = ['*']

# SECURE_SSL_REDIRECT = False
# SECURE_SSL_REDIRECT = True


# Application definition

INSTALLED_APPS = [
    'corsheaders', 
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Ainaw_And_Social_Connect',
    'Counsel_For_Academic_And_Job',
    'Legal_And_Counsel',
    'Project_Youth_And_Business_Enterpreneur_Network',
    'rest_framework',
    'django_filters',
    'tinymce',
    'ConnectifyIndia',
    'SocialMediaApp',
    "whitenoise.runserver_nostatic",
    "users",
    "django_rest_passwordreset",
    # "users.apps.usersConfig",

    # OAuth
    'oauth2_provider',
    'social_django',
    'drf_social_oauth2',
    # 'djangorestframework-simplejwt',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
   ]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000"
]

CSRF_TRUSTED_ORIGINS = ['http://127.0.0.1:5463']
# CSRF_TRUSTED_ORIGINS = ['https://connectifyindiasqldb.azurewebsites.net']
# CSRF_TRUSTED_ORIGINS = ['https://connectifyglobalbackend.azurewebsites.net']

ROOT_URLCONF = 'CONNECTIFY_INDIA_PROJECT.urls'
TEMPLATES = [
    {
        'BACKEND':'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR,'templates/'],
        'APP_DIRS': True,
        'OPTIONS':{
            'context_processors':[
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # OAuth
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'CONNECTIFY_INDIA_PROJECT.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# DATABASES = {
#      'default': {
#          'ENGINE': 'django.db.backends.sqlite3',
#         #  'NAME': BASE_DIR / 'db.sqlite3',
#          'NAME':'connectify_india_db',
#          'USER':'azlogin',
#          'PASSWORD':'P@ssw0rd@2022',
#          'PORT':'3306',
#          'HOST':'connectifyindiamysqldb.mysql.database.azure.com',
#      }
#       }

DATABASES = {
    'default': {
        'ENGINE':'django.db.backends.mysql',
        'NAME':'connectifyindialocaldb',
        'USER':'root',
        'PASSWORD':'root',
}
}

# DATABASES = {
#     'default': {
#         'ENGINE':'django.db.backends.mysql',
#         'NAME':'connectify_india_db',
#         'USER':'azlogin',
#         'PASSWORD':'P@ssw0rd@2022',
#         'PORT':'3306',
#         'HOST':'connectifyindiamysqldb.mysql.database.azure.com',
#         # 'OPTIONS': {
#         #     'ssl': {'ssl-ca': '/app/work/ca.pem'},
#         # },
# }
# }



# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD='django.db.models.BigAutoField'
# ALLOWED_HOSTS=['*']
CORS_ORIGIN_ALLOW_ALL=True

REST_FRAMEWORK ={
     'DEFAULT_PAGINATION_CLASS':'rest_framework.pagination.PageNumberPagination',
     'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],         
     'PAGE_SIZE':6,

     'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'oauth2_provider.ext.rest_framework.OAuth2Authentication',  # django-oauth-toolkit < 1.0.0
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',  # django-oauth-toolkit >= 1.0.0
        'drf_social_oauth2.authentication.SocialAuthentication',
    ),
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.isAuthenticated',
    # ],
}

TINYMCE_DEFAULT_CONFIG = {
    'height': 360,
    'width': 920,
    'cleanup_on_startup': True,
    'custom_undo_redo_levels': 10,
    'selector': 'textarea',
    'theme': 'silver',
    # Add any other TinyMCE configuration options you desire
}

# REST_FRAMEWORK = {
#     'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend']
# }
# AUTH_USER_MODEL='Legal_And_Counsel.User'

# On older Django versions:
# STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# On Django 4.2+:
STORAGES = {
    # ...
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}
STATIC_ROOT = os.path.join(BASE_DIR,"staticfiles")
STATIC_URL= "/staticfiles/"
MEDIA_ROOT= os.path.join(BASE_DIR,"media")
MEDIA_URL="/media/"

# Custom user model
AUTH_USER_MODEL = "users.NewUser"


AUTHENTICATION_BACKENDS = (
    # Others auth providers (e.g. Google, OpenId, etc)

     # Google  OAuth2
    'social_core.backends.google.GoogleOAuth2',

    # Facebook OAuth2
    'social_core.backends.facebook.FacebookAppOAuth2',
    'social_core.backends.facebook.FacebookOAuth2',

    # drf_social_oauth2
    'drf_social_oauth2.backends.DjangoOAuth2',

    # Django
    'django.contrib.auth.backends.ModelBackend',
)
# Facebook configuration
SOCIAL_AUTH_FACEBOOK_KEY = '310599328295224'
SOCIAL_AUTH_FACEBOOK_SECRET = 'd488e6525568a6c61cb57517c4247652'
SOCIAL_AUTH_LOGIN_REDIRECT_URL = 'http://localhost:3000/'

# Define SOCIAL_AUTH_FACEBOOK_SCOPE to get extra permissions from Facebook.
# Email is not sent by default, to get it, you must request the email permission.

SOCIAL_AUTH_FACEBOOK_SCOPE = ['username']

# SOCIAL_AUTH_PIPELINE = (
#     'social.pipeline.social_auth.associate_by_email'
# )

SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'fields': 'id,name,email'
}
SOCIAL_AUTH_USER_FIELDS=['email','username','first_name','password']

# # Google configuration
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY ="351207570537-5hqhi9gk3bvc4c86rs0u4d28fk4fjk3b.apps.googleusercontent.com"
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET ="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"

# Define SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE to get extra permissions from Google.
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE =[
    'https://www.googleapis.com/auth/userinfo.email',
    'https://www.googleapis.com/auth/userinfo.profile',
]

# Email Backend Configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  # Replace with your preferred backend
EMAIL_PORT = 587  # Replace with your email port
EMAIL_USE_TLS = True  # Set to False if your email server doesn't use TLS
EMAIL_HOST = 'smtp.gmail.com'  # Replace with your email host for gmail -> 'smtp.gmail.com'
EMAIL_HOST_USER = 'kshubrashtra@gmail.com'  # Replace with your email username
EMAIL_HOST_PASSWORD = 'roay hcls epiz oluo'  # Replace with your email password


